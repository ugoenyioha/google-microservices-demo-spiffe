# Copyright 2018 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
apiVersion: v1
kind: ConfigMap
metadata:
  name: shippingservice-envoy-jwt-auth-helper-config
data:
  envoy-jwt-auth-helper.conf: |
    socket_path = "unix:///var/run/secrets/workload-spiffe-uds/socket"
    host = "127.0.0.1"
    port = 9010
    jwt_mode = "jwt_svid_validator"
    audience = "example/microservice-demo/shippingservice"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: shippingservice-envoy
data:
  envoy.yaml: |
    node:
      id: backend
      cluster: shippingservice-spire
    static_resources:
      listeners:
      - name: local_service
        address:
          socket_address:
            address: 0.0.0.0
            port_value: 50051
        filter_chains:
        - filters:
          - name: envoy.http_connection_manager
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
              common_http_protocol_options:
                idle_timeout: 10s
              codec_type: auto
              access_log:
                name: envoy.access_loggers.file
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
                  path: /tmp/inbound-proxy.log
              stat_prefix: ingress_http
              route_config:
                name: local_route
                virtual_hosts:
                - name: local_service
                  domains: ["*"]
                  routes:
                  - match:
                      prefix: /
                    route:
                      cluster: local_service
              http_filters:
              - name: envoy.filters.http.router
                typed_config: {}
          transport_socket:
            name: envoy.transport_sockets.tls
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
              common_tls_context:
                tls_certificate_sds_secret_configs:
                - name: "spiffe://usableapps.io/example/microservice-demo/shippingservice"
                  sds_config:
                    resource_api_version: V3
                    api_config_source:
                      api_type: gRPC
                      transport_api_version: v3
                      grpc_services:
                        envoy_grpc:
                          cluster_name: spire_agent
                tls_params:
                  ecdh_curves: X25519:P-256:P-521:P-384
                combined_validation_context:
                  validation_context_sds_secret_config:
                    name: "spiffe://usableapps.io"
                    sds_config:
                      resource_api_version: V3
                      api_config_source:
                        api_type: GRPC
                        transport_api_version: V3
                        grpc_services:
                          envoy_grpc:
                            cluster_name: spire_agent
                  # validate the SPIFFE ID of incoming callers
                  default_validation_context:
                    match_typed_subject_alt_names:
                    - san_type: URI
                      matcher:
                        exact: "spiffe://usableapps.io/example/microservice-demo/frontend"
                    - san_type: URI
                      matcher:
                        exact: "spiffe://usableapps.io/example/microservice-demo/checkoutservice"
      clusters:
      - name: local_service
        connect_timeout: 0.25s
        type: STATIC
        lb_policy: ROUND_ROBIN
        typed_extension_protocol_options:
          envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
            "@type": type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions
            explicit_http_config:
              http2_protocol_options: {}
        load_assignment:
          cluster_name: local_service
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: 127.0.0.1
                    port_value: 50052
      - name: spire_agent
        connect_timeout: 0.25s
        type: STATIC
        lb_policy: ROUND_ROBIN
        typed_extension_protocol_options:
          envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
            "@type": type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions
            explicit_http_config:
              http2_protocol_options: {}
        load_assignment:
          cluster_name: spire_agent
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  pipe:
                    path: /var/run/secrets/workload-spiffe-uds/socket
---
apiVersion: v1
kind: Service
metadata:
  name: shippingservice
spec:
  type: ClusterIP
  selector:
    app: shippingservice
  ports:
  - name: grpc
    port: 50051
    targetPort: 50051
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: shippingservice
spec:
  selector:
    matchLabels:
      app: shippingservice
  template:
    metadata:
      labels:
        app: shippingservice
      annotations:
        spiffe.io/spiffe-id: example/microservice-demo/shippingservice
    spec:
      serviceAccountName: default
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      containers:
      - name: server
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - all
          privileged: false
          readOnlyRootFilesystem: true
        image: shippingservice
        ports:
        - containerPort: 50052
        env:
        - name: PORT
          value: "50052"
        - name: DISABLE_PROFILER
          value: "1"
        readinessProbe:
          periodSeconds: 5
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:50052"]
        livenessProbe:
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:50052"]
        resources:
          requests:
            cpu: 100m
            memory: 64Mi
          limits:
            cpu: 200m
            memory: 128Mi
      - name: envoy
        image: envoyproxy/envoy-alpine:v1.21.6
        imagePullPolicy: IfNotPresent
        args: ["-l", "debug", "--local-address-ip-version", "v4", "-c", "/run/envoy/envoy.yaml"]
        ports:
          - name: envoy
            containerPort: 50051
        volumeMounts:
        - name: shippingservice-envoy-config
          mountPath: "/run/envoy"
          readOnly: true
        - name: spire-agent-socket
          mountPath: /var/run/secrets/workload-spiffe-uds
          readOnly: true
      - name: auth-helper
        image: us.gcr.io/scytale-registry/envoy-jwt-auth-helper@sha256:e55ce5fd42f13c5475b285a848c5f83bc4a335a93d7f934d3ac884920045fc96
        imagePullPolicy: IfNotPresent
        args:  ["-config", "/run/envoy-jwt-auth-helper/config/envoy-jwt-auth-helper.conf"]
        ports:
        - containerPort: 9010
        volumeMounts:
        - name: shippingservice-envoy-jwt-auth-helper-config
          mountPath: "/run/envoy-jwt-auth-helper/config"
          readOnly: true
        - name: spire-agent-socket
          mountPath: /var/run/secrets/workload-spiffe-uds
          readOnly: true
      volumes:
        - name: spire-agent-socket
          hostPath:
            path: /var/run/secrets/workload-spiffe-uds
            type: Directory
        - name: shippingservice-envoy-config
          configMap:
            name: shippingservice-envoy
        - name: shippingservice-envoy-jwt-auth-helper-config
          configMap:
              name: shippingservice-envoy-jwt-auth-helper-config
