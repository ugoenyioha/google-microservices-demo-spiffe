# Copyright 2018 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: loadgenerator-envoy-jwt-auth-helper-config
data:
  envoy-jwt-auth-helper.conf: |
    socket_path = "unix:///run/spire/agent-sockets/spire-agent.sock"
    host = "127.0.0.1"
    port = 9010
    jwt_mode = "jwt_injector"
    audience = "example.microservice-demo.loadgenerator"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: loadgenerator-envoy
data:
  envoy.yaml: |
    node:
      id: "backend"
      cluster: "demo-cluster-spire"
    static_resources:
      listeners:
      - name: local_service
        address:
          socket_address:
            address: 0.0.0.0
            port_value: 80
        filter_chains:
        - filters:
          - name: envoy.http_connection_manager
            typed_config:
              "@type": type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager
              common_http_protocol_options:
                idle_timeout: 1s
              codec_type: auto
              access_log:
              - name: envoy.file_access_log
                config:
                  path: "/tmp/inbound-proxy.log"
              stat_prefix: ingress_http
              route_config:
                name: local_route
                virtual_hosts:
                - name: local_service
                  domains: ["*"]
                  routes:
                  - match:
                      prefix: "/"
                    route:
                      cluster: local_service
              http_filters:
              - name: envoy.ext_authz
                config:
                  grpc_service:
                    envoy_grpc:
                      cluster_name: ext-authz
                    timeout: 0.5s
              - name: envoy.router
          tls_context:
            common_tls_context:
              tls_certificate_sds_secret_configs:
              - name: "spiffe://home.usableapps.io/example.flask-echo-server"
                sds_config:
                  api_config_source:
                    api_type: GRPC
                    grpc_services:
                      envoy_grpc:
                        cluster_name: spire_agent
              tls_params:
                ecdh_curves:
                  - X25519:P-256:P-521:P-384
      clusters:
      - name: spire_agent
        connect_timeout: 0.25s
        http2_protocol_options: {}
        hosts:
          - pipe:
              path: /run/spire/agent-sockets/spire-agent.sock
      - name: local_service
        connect_timeout: 1s
        type: strict_dns
        hosts:
          - socket_address:
              address: 127.0.0.1
              port_value: 5000
      - name: ext-authz
        connect_timeout: 1s
        type: strict_dns
        http2_protocol_options: {}
        hosts:
          - socket_address:
              address: 127.0.0.1
              port_value: 9010
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: loadgenerator
spec:
  selector:
    matchLabels:
      app: loadgenerator
  replicas: 1
  template:
    metadata:
      labels:
        app: loadgenerator
        spiffe.io/spiffe-id: example.microservice-demo.loadgenerator
      annotations:
        sidecar.istio.io/rewriteAppHTTPProbers: "true"
    spec:
      serviceAccountName: default
      terminationGracePeriodSeconds: 5
      restartPolicy: Always
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      initContainers:
      - command:
        - /bin/sh
        - -exc
        - |
          echo "Init container pinging frontend: ${FRONTEND_ADDR}..."
          STATUSCODE=$(wget --server-response http://${FRONTEND_ADDR} 2>&1 | awk '/^  HTTP/{print $2}')
          if test $STATUSCODE -ne 200; then
              echo "Error: Could not reach frontend - Status code: ${STATUSCODE}"
              exit 1
          fi
        name: frontend-check
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - all
          privileged: false
          readOnlyRootFilesystem: true
        image: busybox:latest
        env:
        - name: FRONTEND_ADDR
          value: "frontend:80"
      containers:
      - name: main
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - all
          privileged: false
          readOnlyRootFilesystem: true
        image: loadgenerator
        env:
        - name: FRONTEND_ADDR
          value: "frontend:80"
        - name: USERS
          value: "10"
        resources:
          requests:
            cpu: 300m
            memory: 256Mi
          limits:
            cpu: 500m
            memory: 512Mi
      - name: envoy
        image: envoyproxy/envoy-alpine:v1.14.1
        imagePullPolicy: IfNotPresent
        args: ["-l", "debug", "--local-address-ip-version", "v4", "-c", "/run/envoy/envoy.yaml"]
        ports:
          - name: envoy
            containerPort: 80
        volumeMounts:
        - name: loadgenerator-envoy-config
          mountPath: "/run/envoy"
          readOnly: true
        - name: spire-agent-socket
          mountPath: /run/spire/agent-sockets
          readOnly: true
      - name: auth-helper
        image: us.gcr.io/scytale-registry/envoy-jwt-auth-helper@sha256:e55ce5fd42f13c5475b285a848c5f83bc4a335a93d7f934d3ac884920045fc96
        imagePullPolicy: IfNotPresent
        args:  ["-config", "/run/envoy-jwt-auth-helper/config/envoy-jwt-auth-helper.conf"]
        ports:
        - containerPort: 9010
        volumeMounts:
        - name: loadgenerator-envoy-jwt-auth-helper-config
          mountPath: "/run/envoy-jwt-auth-helper/config"
          readOnly: true
        - name: spire-agent-socket
          mountPath: /run/spire/agent-sockets
          readOnly: true
      volumes:
        - name: spire-agent-socket
          hostPath:
            path: /run/spire/agent-sockets
            type: Directory
        - name: loadgenerator-envoy-config
          configMap:
            name: loadgenerator-envoy
        - name: loadgenerator-envoy-jwt-auth-helper-config
          configMap:
              name: loadgenerator-envoy-jwt-auth-helper-config
